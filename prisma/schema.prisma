// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid()) @db.UniqueIdentifier
  email            String?   @unique
  isEmailVerified  Boolean?   @default(false)
  companyLicenseNo String?
  companyNameEn    String?
  companyNameAr    String?
  landline         String?
  mobile           String?
  country          String?
  region           String?
  city             String?
  zipCode          String?
  streetAddress    String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  cart             Cart?
}

model License {
  id        String    @id @default(uuid()) @db.UniqueIdentifier
  license   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model OTP {
  id        String   @id @default(uuid()) @db.UniqueIdentifier
  email     String
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String    @id @default(uuid()) @db.UniqueIdentifier
  image       String?
  title       String?
  description String?
  price       Float?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cartItems   CartItem[]
}

model Cart {
  id        String     @id @default(uuid()) @db.UniqueIdentifier
  userId    String     @unique @db.UniqueIdentifier
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(uuid()) @db.UniqueIdentifier
  cartId    String   @db.UniqueIdentifier
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String   @db.UniqueIdentifier
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

